"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const check_confirmed_1 = __importDefault(require("./check-confirmed"));
const utils_1 = require("./utils");
async function sendOperation(config, Tezos, contractAddress, entrypoint, parameter, amount = 0, batch) {
    try {
        console.log(`Using amount: ${amount}`);
        console.log(`Using param: ${parameter}`);
        const contract = await Tezos.contract.at(contractAddress);
        let invocation;
        if (Array.isArray(parameter)) {
            invocation = contract.methods[entrypoint].apply(null, parameter);
        }
        else if (parameter === null) {
            invocation = contract.methods[entrypoint]();
        }
        else {
            invocation = contract.methods[entrypoint](parameter);
        }
        if (batch !== undefined) {
            batch.withContractCall(invocation);
        }
        else {
            let result;
            if (amount !== 0) {
                result = await invocation.send({ amount, mutez: true });
            }
            else {
                result = await invocation.send();
            }
            console.log(`Deployed in hash: ${result.hash}`);
            console.log('');
            console.log("Awaiting confirmation...");
            await (0, check_confirmed_1.default)(config, result.hash);
            console.log("Confirmed!");
            return result.hash;
        }
    }
    catch (e) {
        console.log('Caught exception, retrying...');
        console.log(e.message);
        console.error(e);
        await (0, utils_1.sleep)(config.operationDelaySecs);
        return sendOperation(config, Tezos, contractAddress, entrypoint, parameter, amount);
    }
}
exports.default = sendOperation;
//# sourceMappingURL=send-operation.js.map