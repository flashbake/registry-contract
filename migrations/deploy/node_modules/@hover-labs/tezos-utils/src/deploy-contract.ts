/** Deploys a new contract. */

import ContractOriginationResult from './types/contract-origination-result'
import NetworkConfig from './types/network-config'
import { TezosToolkit } from '@taquito/taquito'
import checkConfirmed from './check-confirmed'
import { sleep } from './utils'

async function deployContract(
    config: NetworkConfig,
    Tezos: TezosToolkit,
    contractSource: string,
    storage: string,
): Promise<ContractOriginationResult> {
    try {
        console.log(`Using storage: ${storage}`)

        const result = await Tezos.contract.originate({
            code: contractSource,
            init: storage,
        })

        console.log(`Deployed in hash: ${result.hash}`)
        console.log(`Deployed contract: ${result.contractAddress}`)
        console.log('')

        console.log("Awaiting confirmation...")
        await checkConfirmed(config, result.hash)
        console.log("Confirmed!")

        return {
            operationHash: result.hash,
            contractAddress: result.contractAddress || "ERR",
        }
    } catch (e: any) {
        console.log('Caught exception, retrying...')
        console.error(e)
        debugger;
        console.log(e.message)
        await sleep(config.operationDelaySecs)

        return deployContract(
            config,
            Tezos,
            contractSource,
            storage,
        )
    }
}

export default deployContract